/*
 * Uinsure.CustomerPortal.API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Uinsure.CustomerPortal.Client.Client.OpenAPIDateConverter;

namespace Uinsure.CustomerPortal.Client.Model
{
    /// <summary>
    /// BrokerDetails
    /// </summary>
    [DataContract(Name = "BrokerDetails")]
    public partial class BrokerDetails : IEquatable<BrokerDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BrokerDetails" /> class.
        /// </summary>
        /// <param name="brokerCommissionRate">brokerCommissionRate.</param>
        /// <param name="networkCommissionRate">networkCommissionRate.</param>
        /// <param name="saleTypeNew">saleTypeNew.</param>
        /// <param name="uinsureCommissionRate">uinsureCommissionRate.</param>
        /// <param name="uinsureDBApplicationSource">uinsureDBApplicationSource.</param>
        /// <param name="uinsureDBBrokerFirstName">uinsureDBBrokerFirstName.</param>
        /// <param name="uinsureDBBrokerLastName">uinsureDBBrokerLastName.</param>
        /// <param name="uinsureDBBrokerFullName">uinsureDBBrokerFullName.</param>
        /// <param name="uinsureDBCompanyName">uinsureDBCompanyName.</param>
        /// <param name="uinsureDBDistributionGroupName">uinsureDBDistributionGroupName.</param>
        /// <param name="uinsureDBDrillDownStatus">uinsureDBDrillDownStatus.</param>
        /// <param name="uinsureDBNetworkName">uinsureDBNetworkName.</param>
        /// <param name="uinsureDBOriginalBrokerFirstName">uinsureDBOriginalBrokerFirstName.</param>
        /// <param name="uinsureDBOriginalBrokerLastName">uinsureDBOriginalBrokerLastName.</param>
        /// <param name="uinsureDBOriginalBrokerFullName">uinsureDBOriginalBrokerFullName.</param>
        /// <param name="uinsureDBOriginalCompanyName">uinsureDBOriginalCompanyName.</param>
        /// <param name="uinsureDBOriginalDistributionGroupName">uinsureDBOriginalDistributionGroupName.</param>
        /// <param name="uinsureDBOriginalNetworkName">uinsureDBOriginalNetworkName.</param>
        /// <param name="uinsureDBOriginalPolicyNumber">uinsureDBOriginalPolicyNumber.</param>
        /// <param name="uinsureDBSaleType">uinsureDBSaleType.</param>
        /// <param name="uinsureDBSource">uinsureDBSource.</param>
        public BrokerDetails(double? brokerCommissionRate = default(double?), double? networkCommissionRate = default(double?), string saleTypeNew = default(string), double? uinsureCommissionRate = default(double?), string uinsureDBApplicationSource = default(string), string uinsureDBBrokerFirstName = default(string), string uinsureDBBrokerLastName = default(string), string uinsureDBBrokerFullName = default(string), string uinsureDBCompanyName = default(string), string uinsureDBDistributionGroupName = default(string), string uinsureDBDrillDownStatus = default(string), string uinsureDBNetworkName = default(string), string uinsureDBOriginalBrokerFirstName = default(string), string uinsureDBOriginalBrokerLastName = default(string), string uinsureDBOriginalBrokerFullName = default(string), string uinsureDBOriginalCompanyName = default(string), string uinsureDBOriginalDistributionGroupName = default(string), string uinsureDBOriginalNetworkName = default(string), string uinsureDBOriginalPolicyNumber = default(string), string uinsureDBSaleType = default(string), string uinsureDBSource = default(string))
        {
            this._BrokerCommissionRate = brokerCommissionRate;
            if (this.BrokerCommissionRate != null)
            {
                this._flagBrokerCommissionRate = true;
            }
            this._NetworkCommissionRate = networkCommissionRate;
            if (this.NetworkCommissionRate != null)
            {
                this._flagNetworkCommissionRate = true;
            }
            this._SaleTypeNew = saleTypeNew;
            if (this.SaleTypeNew != null)
            {
                this._flagSaleTypeNew = true;
            }
            this._UinsureCommissionRate = uinsureCommissionRate;
            if (this.UinsureCommissionRate != null)
            {
                this._flagUinsureCommissionRate = true;
            }
            this._UinsureDBApplicationSource = uinsureDBApplicationSource;
            if (this.UinsureDBApplicationSource != null)
            {
                this._flagUinsureDBApplicationSource = true;
            }
            this._UinsureDBBrokerFirstName = uinsureDBBrokerFirstName;
            if (this.UinsureDBBrokerFirstName != null)
            {
                this._flagUinsureDBBrokerFirstName = true;
            }
            this._UinsureDBBrokerLastName = uinsureDBBrokerLastName;
            if (this.UinsureDBBrokerLastName != null)
            {
                this._flagUinsureDBBrokerLastName = true;
            }
            this._UinsureDBBrokerFullName = uinsureDBBrokerFullName;
            if (this.UinsureDBBrokerFullName != null)
            {
                this._flagUinsureDBBrokerFullName = true;
            }
            this._UinsureDBCompanyName = uinsureDBCompanyName;
            if (this.UinsureDBCompanyName != null)
            {
                this._flagUinsureDBCompanyName = true;
            }
            this._UinsureDBDistributionGroupName = uinsureDBDistributionGroupName;
            if (this.UinsureDBDistributionGroupName != null)
            {
                this._flagUinsureDBDistributionGroupName = true;
            }
            this._UinsureDBDrillDownStatus = uinsureDBDrillDownStatus;
            if (this.UinsureDBDrillDownStatus != null)
            {
                this._flagUinsureDBDrillDownStatus = true;
            }
            this._UinsureDBNetworkName = uinsureDBNetworkName;
            if (this.UinsureDBNetworkName != null)
            {
                this._flagUinsureDBNetworkName = true;
            }
            this._UinsureDBOriginalBrokerFirstName = uinsureDBOriginalBrokerFirstName;
            if (this.UinsureDBOriginalBrokerFirstName != null)
            {
                this._flagUinsureDBOriginalBrokerFirstName = true;
            }
            this._UinsureDBOriginalBrokerLastName = uinsureDBOriginalBrokerLastName;
            if (this.UinsureDBOriginalBrokerLastName != null)
            {
                this._flagUinsureDBOriginalBrokerLastName = true;
            }
            this._UinsureDBOriginalBrokerFullName = uinsureDBOriginalBrokerFullName;
            if (this.UinsureDBOriginalBrokerFullName != null)
            {
                this._flagUinsureDBOriginalBrokerFullName = true;
            }
            this._UinsureDBOriginalCompanyName = uinsureDBOriginalCompanyName;
            if (this.UinsureDBOriginalCompanyName != null)
            {
                this._flagUinsureDBOriginalCompanyName = true;
            }
            this._UinsureDBOriginalDistributionGroupName = uinsureDBOriginalDistributionGroupName;
            if (this.UinsureDBOriginalDistributionGroupName != null)
            {
                this._flagUinsureDBOriginalDistributionGroupName = true;
            }
            this._UinsureDBOriginalNetworkName = uinsureDBOriginalNetworkName;
            if (this.UinsureDBOriginalNetworkName != null)
            {
                this._flagUinsureDBOriginalNetworkName = true;
            }
            this._UinsureDBOriginalPolicyNumber = uinsureDBOriginalPolicyNumber;
            if (this.UinsureDBOriginalPolicyNumber != null)
            {
                this._flagUinsureDBOriginalPolicyNumber = true;
            }
            this._UinsureDBSaleType = uinsureDBSaleType;
            if (this.UinsureDBSaleType != null)
            {
                this._flagUinsureDBSaleType = true;
            }
            this._UinsureDBSource = uinsureDBSource;
            if (this.UinsureDBSource != null)
            {
                this._flagUinsureDBSource = true;
            }
        }

        /// <summary>
        /// Gets or Sets BrokerCommissionRate
        /// </summary>
        [DataMember(Name = "BrokerCommissionRate", EmitDefaultValue = true)]
        public double? BrokerCommissionRate
        {
            get{ return _BrokerCommissionRate;}
            set
            {
                _BrokerCommissionRate = value;
                _flagBrokerCommissionRate = true;
            }
        }
        private double? _BrokerCommissionRate;
        private bool _flagBrokerCommissionRate;

        /// <summary>
        /// Returns false as BrokerCommissionRate should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeBrokerCommissionRate()
        {
            return _flagBrokerCommissionRate;
        }
        /// <summary>
        /// Gets or Sets NetworkCommissionRate
        /// </summary>
        [DataMember(Name = "NetworkCommissionRate", EmitDefaultValue = true)]
        public double? NetworkCommissionRate
        {
            get{ return _NetworkCommissionRate;}
            set
            {
                _NetworkCommissionRate = value;
                _flagNetworkCommissionRate = true;
            }
        }
        private double? _NetworkCommissionRate;
        private bool _flagNetworkCommissionRate;

        /// <summary>
        /// Returns false as NetworkCommissionRate should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeNetworkCommissionRate()
        {
            return _flagNetworkCommissionRate;
        }
        /// <summary>
        /// Gets or Sets SaleTypeNew
        /// </summary>
        [DataMember(Name = "SaleTypeNew", EmitDefaultValue = true)]
        public string SaleTypeNew
        {
            get{ return _SaleTypeNew;}
            set
            {
                _SaleTypeNew = value;
                _flagSaleTypeNew = true;
            }
        }
        private string _SaleTypeNew;
        private bool _flagSaleTypeNew;

        /// <summary>
        /// Returns false as SaleTypeNew should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeSaleTypeNew()
        {
            return _flagSaleTypeNew;
        }
        /// <summary>
        /// Gets or Sets UinsureCommissionRate
        /// </summary>
        [DataMember(Name = "UinsureCommissionRate", EmitDefaultValue = true)]
        public double? UinsureCommissionRate
        {
            get{ return _UinsureCommissionRate;}
            set
            {
                _UinsureCommissionRate = value;
                _flagUinsureCommissionRate = true;
            }
        }
        private double? _UinsureCommissionRate;
        private bool _flagUinsureCommissionRate;

        /// <summary>
        /// Returns false as UinsureCommissionRate should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureCommissionRate()
        {
            return _flagUinsureCommissionRate;
        }
        /// <summary>
        /// Gets or Sets UinsureDBApplicationSource
        /// </summary>
        [DataMember(Name = "UinsureDBApplicationSource", EmitDefaultValue = true)]
        public string UinsureDBApplicationSource
        {
            get{ return _UinsureDBApplicationSource;}
            set
            {
                _UinsureDBApplicationSource = value;
                _flagUinsureDBApplicationSource = true;
            }
        }
        private string _UinsureDBApplicationSource;
        private bool _flagUinsureDBApplicationSource;

        /// <summary>
        /// Returns false as UinsureDBApplicationSource should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBApplicationSource()
        {
            return _flagUinsureDBApplicationSource;
        }
        /// <summary>
        /// Gets or Sets UinsureDBBrokerFirstName
        /// </summary>
        [DataMember(Name = "UinsureDBBrokerFirstName", EmitDefaultValue = true)]
        public string UinsureDBBrokerFirstName
        {
            get{ return _UinsureDBBrokerFirstName;}
            set
            {
                _UinsureDBBrokerFirstName = value;
                _flagUinsureDBBrokerFirstName = true;
            }
        }
        private string _UinsureDBBrokerFirstName;
        private bool _flagUinsureDBBrokerFirstName;

        /// <summary>
        /// Returns false as UinsureDBBrokerFirstName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBBrokerFirstName()
        {
            return _flagUinsureDBBrokerFirstName;
        }
        /// <summary>
        /// Gets or Sets UinsureDBBrokerLastName
        /// </summary>
        [DataMember(Name = "UinsureDBBrokerLastName", EmitDefaultValue = true)]
        public string UinsureDBBrokerLastName
        {
            get{ return _UinsureDBBrokerLastName;}
            set
            {
                _UinsureDBBrokerLastName = value;
                _flagUinsureDBBrokerLastName = true;
            }
        }
        private string _UinsureDBBrokerLastName;
        private bool _flagUinsureDBBrokerLastName;

        /// <summary>
        /// Returns false as UinsureDBBrokerLastName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBBrokerLastName()
        {
            return _flagUinsureDBBrokerLastName;
        }
        /// <summary>
        /// Gets or Sets UinsureDBBrokerFullName
        /// </summary>
        [DataMember(Name = "UinsureDBBrokerFullName", EmitDefaultValue = true)]
        public string UinsureDBBrokerFullName
        {
            get{ return _UinsureDBBrokerFullName;}
            set
            {
                _UinsureDBBrokerFullName = value;
                _flagUinsureDBBrokerFullName = true;
            }
        }
        private string _UinsureDBBrokerFullName;
        private bool _flagUinsureDBBrokerFullName;

        /// <summary>
        /// Returns false as UinsureDBBrokerFullName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBBrokerFullName()
        {
            return _flagUinsureDBBrokerFullName;
        }
        /// <summary>
        /// Gets or Sets UinsureDBCompanyName
        /// </summary>
        [DataMember(Name = "UinsureDBCompanyName", EmitDefaultValue = true)]
        public string UinsureDBCompanyName
        {
            get{ return _UinsureDBCompanyName;}
            set
            {
                _UinsureDBCompanyName = value;
                _flagUinsureDBCompanyName = true;
            }
        }
        private string _UinsureDBCompanyName;
        private bool _flagUinsureDBCompanyName;

        /// <summary>
        /// Returns false as UinsureDBCompanyName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBCompanyName()
        {
            return _flagUinsureDBCompanyName;
        }
        /// <summary>
        /// Gets or Sets UinsureDBDistributionGroupName
        /// </summary>
        [DataMember(Name = "UinsureDBDistributionGroupName", EmitDefaultValue = true)]
        public string UinsureDBDistributionGroupName
        {
            get{ return _UinsureDBDistributionGroupName;}
            set
            {
                _UinsureDBDistributionGroupName = value;
                _flagUinsureDBDistributionGroupName = true;
            }
        }
        private string _UinsureDBDistributionGroupName;
        private bool _flagUinsureDBDistributionGroupName;

        /// <summary>
        /// Returns false as UinsureDBDistributionGroupName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBDistributionGroupName()
        {
            return _flagUinsureDBDistributionGroupName;
        }
        /// <summary>
        /// Gets or Sets UinsureDBDrillDownStatus
        /// </summary>
        [DataMember(Name = "UinsureDBDrillDownStatus", EmitDefaultValue = true)]
        public string UinsureDBDrillDownStatus
        {
            get{ return _UinsureDBDrillDownStatus;}
            set
            {
                _UinsureDBDrillDownStatus = value;
                _flagUinsureDBDrillDownStatus = true;
            }
        }
        private string _UinsureDBDrillDownStatus;
        private bool _flagUinsureDBDrillDownStatus;

        /// <summary>
        /// Returns false as UinsureDBDrillDownStatus should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBDrillDownStatus()
        {
            return _flagUinsureDBDrillDownStatus;
        }
        /// <summary>
        /// Gets or Sets UinsureDBNetworkName
        /// </summary>
        [DataMember(Name = "UinsureDBNetworkName", EmitDefaultValue = true)]
        public string UinsureDBNetworkName
        {
            get{ return _UinsureDBNetworkName;}
            set
            {
                _UinsureDBNetworkName = value;
                _flagUinsureDBNetworkName = true;
            }
        }
        private string _UinsureDBNetworkName;
        private bool _flagUinsureDBNetworkName;

        /// <summary>
        /// Returns false as UinsureDBNetworkName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBNetworkName()
        {
            return _flagUinsureDBNetworkName;
        }
        /// <summary>
        /// Gets or Sets UinsureDBOriginalBrokerFirstName
        /// </summary>
        [DataMember(Name = "UinsureDBOriginalBrokerFirstName", EmitDefaultValue = true)]
        public string UinsureDBOriginalBrokerFirstName
        {
            get{ return _UinsureDBOriginalBrokerFirstName;}
            set
            {
                _UinsureDBOriginalBrokerFirstName = value;
                _flagUinsureDBOriginalBrokerFirstName = true;
            }
        }
        private string _UinsureDBOriginalBrokerFirstName;
        private bool _flagUinsureDBOriginalBrokerFirstName;

        /// <summary>
        /// Returns false as UinsureDBOriginalBrokerFirstName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBOriginalBrokerFirstName()
        {
            return _flagUinsureDBOriginalBrokerFirstName;
        }
        /// <summary>
        /// Gets or Sets UinsureDBOriginalBrokerLastName
        /// </summary>
        [DataMember(Name = "UinsureDBOriginalBrokerLastName", EmitDefaultValue = true)]
        public string UinsureDBOriginalBrokerLastName
        {
            get{ return _UinsureDBOriginalBrokerLastName;}
            set
            {
                _UinsureDBOriginalBrokerLastName = value;
                _flagUinsureDBOriginalBrokerLastName = true;
            }
        }
        private string _UinsureDBOriginalBrokerLastName;
        private bool _flagUinsureDBOriginalBrokerLastName;

        /// <summary>
        /// Returns false as UinsureDBOriginalBrokerLastName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBOriginalBrokerLastName()
        {
            return _flagUinsureDBOriginalBrokerLastName;
        }
        /// <summary>
        /// Gets or Sets UinsureDBOriginalBrokerFullName
        /// </summary>
        [DataMember(Name = "UinsureDBOriginalBrokerFullName", EmitDefaultValue = true)]
        public string UinsureDBOriginalBrokerFullName
        {
            get{ return _UinsureDBOriginalBrokerFullName;}
            set
            {
                _UinsureDBOriginalBrokerFullName = value;
                _flagUinsureDBOriginalBrokerFullName = true;
            }
        }
        private string _UinsureDBOriginalBrokerFullName;
        private bool _flagUinsureDBOriginalBrokerFullName;

        /// <summary>
        /// Returns false as UinsureDBOriginalBrokerFullName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBOriginalBrokerFullName()
        {
            return _flagUinsureDBOriginalBrokerFullName;
        }
        /// <summary>
        /// Gets or Sets UinsureDBOriginalCompanyName
        /// </summary>
        [DataMember(Name = "UinsureDBOriginalCompanyName", EmitDefaultValue = true)]
        public string UinsureDBOriginalCompanyName
        {
            get{ return _UinsureDBOriginalCompanyName;}
            set
            {
                _UinsureDBOriginalCompanyName = value;
                _flagUinsureDBOriginalCompanyName = true;
            }
        }
        private string _UinsureDBOriginalCompanyName;
        private bool _flagUinsureDBOriginalCompanyName;

        /// <summary>
        /// Returns false as UinsureDBOriginalCompanyName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBOriginalCompanyName()
        {
            return _flagUinsureDBOriginalCompanyName;
        }
        /// <summary>
        /// Gets or Sets UinsureDBOriginalDistributionGroupName
        /// </summary>
        [DataMember(Name = "UinsureDBOriginalDistributionGroupName", EmitDefaultValue = true)]
        public string UinsureDBOriginalDistributionGroupName
        {
            get{ return _UinsureDBOriginalDistributionGroupName;}
            set
            {
                _UinsureDBOriginalDistributionGroupName = value;
                _flagUinsureDBOriginalDistributionGroupName = true;
            }
        }
        private string _UinsureDBOriginalDistributionGroupName;
        private bool _flagUinsureDBOriginalDistributionGroupName;

        /// <summary>
        /// Returns false as UinsureDBOriginalDistributionGroupName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBOriginalDistributionGroupName()
        {
            return _flagUinsureDBOriginalDistributionGroupName;
        }
        /// <summary>
        /// Gets or Sets UinsureDBOriginalNetworkName
        /// </summary>
        [DataMember(Name = "UinsureDBOriginalNetworkName", EmitDefaultValue = true)]
        public string UinsureDBOriginalNetworkName
        {
            get{ return _UinsureDBOriginalNetworkName;}
            set
            {
                _UinsureDBOriginalNetworkName = value;
                _flagUinsureDBOriginalNetworkName = true;
            }
        }
        private string _UinsureDBOriginalNetworkName;
        private bool _flagUinsureDBOriginalNetworkName;

        /// <summary>
        /// Returns false as UinsureDBOriginalNetworkName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBOriginalNetworkName()
        {
            return _flagUinsureDBOriginalNetworkName;
        }
        /// <summary>
        /// Gets or Sets UinsureDBOriginalPolicyNumber
        /// </summary>
        [DataMember(Name = "UinsureDBOriginalPolicyNumber", EmitDefaultValue = true)]
        public string UinsureDBOriginalPolicyNumber
        {
            get{ return _UinsureDBOriginalPolicyNumber;}
            set
            {
                _UinsureDBOriginalPolicyNumber = value;
                _flagUinsureDBOriginalPolicyNumber = true;
            }
        }
        private string _UinsureDBOriginalPolicyNumber;
        private bool _flagUinsureDBOriginalPolicyNumber;

        /// <summary>
        /// Returns false as UinsureDBOriginalPolicyNumber should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBOriginalPolicyNumber()
        {
            return _flagUinsureDBOriginalPolicyNumber;
        }
        /// <summary>
        /// Gets or Sets UinsureDBSaleType
        /// </summary>
        [DataMember(Name = "UinsureDBSaleType", EmitDefaultValue = true)]
        public string UinsureDBSaleType
        {
            get{ return _UinsureDBSaleType;}
            set
            {
                _UinsureDBSaleType = value;
                _flagUinsureDBSaleType = true;
            }
        }
        private string _UinsureDBSaleType;
        private bool _flagUinsureDBSaleType;

        /// <summary>
        /// Returns false as UinsureDBSaleType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBSaleType()
        {
            return _flagUinsureDBSaleType;
        }
        /// <summary>
        /// Gets or Sets UinsureDBSource
        /// </summary>
        [DataMember(Name = "UinsureDBSource", EmitDefaultValue = true)]
        public string UinsureDBSource
        {
            get{ return _UinsureDBSource;}
            set
            {
                _UinsureDBSource = value;
                _flagUinsureDBSource = true;
            }
        }
        private string _UinsureDBSource;
        private bool _flagUinsureDBSource;

        /// <summary>
        /// Returns false as UinsureDBSource should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUinsureDBSource()
        {
            return _flagUinsureDBSource;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BrokerDetails {\n");
            sb.Append("  BrokerCommissionRate: ").Append(BrokerCommissionRate).Append("\n");
            sb.Append("  NetworkCommissionRate: ").Append(NetworkCommissionRate).Append("\n");
            sb.Append("  SaleTypeNew: ").Append(SaleTypeNew).Append("\n");
            sb.Append("  UinsureCommissionRate: ").Append(UinsureCommissionRate).Append("\n");
            sb.Append("  UinsureDBApplicationSource: ").Append(UinsureDBApplicationSource).Append("\n");
            sb.Append("  UinsureDBBrokerFirstName: ").Append(UinsureDBBrokerFirstName).Append("\n");
            sb.Append("  UinsureDBBrokerLastName: ").Append(UinsureDBBrokerLastName).Append("\n");
            sb.Append("  UinsureDBBrokerFullName: ").Append(UinsureDBBrokerFullName).Append("\n");
            sb.Append("  UinsureDBCompanyName: ").Append(UinsureDBCompanyName).Append("\n");
            sb.Append("  UinsureDBDistributionGroupName: ").Append(UinsureDBDistributionGroupName).Append("\n");
            sb.Append("  UinsureDBDrillDownStatus: ").Append(UinsureDBDrillDownStatus).Append("\n");
            sb.Append("  UinsureDBNetworkName: ").Append(UinsureDBNetworkName).Append("\n");
            sb.Append("  UinsureDBOriginalBrokerFirstName: ").Append(UinsureDBOriginalBrokerFirstName).Append("\n");
            sb.Append("  UinsureDBOriginalBrokerLastName: ").Append(UinsureDBOriginalBrokerLastName).Append("\n");
            sb.Append("  UinsureDBOriginalBrokerFullName: ").Append(UinsureDBOriginalBrokerFullName).Append("\n");
            sb.Append("  UinsureDBOriginalCompanyName: ").Append(UinsureDBOriginalCompanyName).Append("\n");
            sb.Append("  UinsureDBOriginalDistributionGroupName: ").Append(UinsureDBOriginalDistributionGroupName).Append("\n");
            sb.Append("  UinsureDBOriginalNetworkName: ").Append(UinsureDBOriginalNetworkName).Append("\n");
            sb.Append("  UinsureDBOriginalPolicyNumber: ").Append(UinsureDBOriginalPolicyNumber).Append("\n");
            sb.Append("  UinsureDBSaleType: ").Append(UinsureDBSaleType).Append("\n");
            sb.Append("  UinsureDBSource: ").Append(UinsureDBSource).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BrokerDetails);
        }

        /// <summary>
        /// Returns true if BrokerDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of BrokerDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BrokerDetails input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BrokerCommissionRate == input.BrokerCommissionRate ||
                    (this.BrokerCommissionRate != null &&
                    this.BrokerCommissionRate.Equals(input.BrokerCommissionRate))
                ) && 
                (
                    this.NetworkCommissionRate == input.NetworkCommissionRate ||
                    (this.NetworkCommissionRate != null &&
                    this.NetworkCommissionRate.Equals(input.NetworkCommissionRate))
                ) && 
                (
                    this.SaleTypeNew == input.SaleTypeNew ||
                    (this.SaleTypeNew != null &&
                    this.SaleTypeNew.Equals(input.SaleTypeNew))
                ) && 
                (
                    this.UinsureCommissionRate == input.UinsureCommissionRate ||
                    (this.UinsureCommissionRate != null &&
                    this.UinsureCommissionRate.Equals(input.UinsureCommissionRate))
                ) && 
                (
                    this.UinsureDBApplicationSource == input.UinsureDBApplicationSource ||
                    (this.UinsureDBApplicationSource != null &&
                    this.UinsureDBApplicationSource.Equals(input.UinsureDBApplicationSource))
                ) && 
                (
                    this.UinsureDBBrokerFirstName == input.UinsureDBBrokerFirstName ||
                    (this.UinsureDBBrokerFirstName != null &&
                    this.UinsureDBBrokerFirstName.Equals(input.UinsureDBBrokerFirstName))
                ) && 
                (
                    this.UinsureDBBrokerLastName == input.UinsureDBBrokerLastName ||
                    (this.UinsureDBBrokerLastName != null &&
                    this.UinsureDBBrokerLastName.Equals(input.UinsureDBBrokerLastName))
                ) && 
                (
                    this.UinsureDBBrokerFullName == input.UinsureDBBrokerFullName ||
                    (this.UinsureDBBrokerFullName != null &&
                    this.UinsureDBBrokerFullName.Equals(input.UinsureDBBrokerFullName))
                ) && 
                (
                    this.UinsureDBCompanyName == input.UinsureDBCompanyName ||
                    (this.UinsureDBCompanyName != null &&
                    this.UinsureDBCompanyName.Equals(input.UinsureDBCompanyName))
                ) && 
                (
                    this.UinsureDBDistributionGroupName == input.UinsureDBDistributionGroupName ||
                    (this.UinsureDBDistributionGroupName != null &&
                    this.UinsureDBDistributionGroupName.Equals(input.UinsureDBDistributionGroupName))
                ) && 
                (
                    this.UinsureDBDrillDownStatus == input.UinsureDBDrillDownStatus ||
                    (this.UinsureDBDrillDownStatus != null &&
                    this.UinsureDBDrillDownStatus.Equals(input.UinsureDBDrillDownStatus))
                ) && 
                (
                    this.UinsureDBNetworkName == input.UinsureDBNetworkName ||
                    (this.UinsureDBNetworkName != null &&
                    this.UinsureDBNetworkName.Equals(input.UinsureDBNetworkName))
                ) && 
                (
                    this.UinsureDBOriginalBrokerFirstName == input.UinsureDBOriginalBrokerFirstName ||
                    (this.UinsureDBOriginalBrokerFirstName != null &&
                    this.UinsureDBOriginalBrokerFirstName.Equals(input.UinsureDBOriginalBrokerFirstName))
                ) && 
                (
                    this.UinsureDBOriginalBrokerLastName == input.UinsureDBOriginalBrokerLastName ||
                    (this.UinsureDBOriginalBrokerLastName != null &&
                    this.UinsureDBOriginalBrokerLastName.Equals(input.UinsureDBOriginalBrokerLastName))
                ) && 
                (
                    this.UinsureDBOriginalBrokerFullName == input.UinsureDBOriginalBrokerFullName ||
                    (this.UinsureDBOriginalBrokerFullName != null &&
                    this.UinsureDBOriginalBrokerFullName.Equals(input.UinsureDBOriginalBrokerFullName))
                ) && 
                (
                    this.UinsureDBOriginalCompanyName == input.UinsureDBOriginalCompanyName ||
                    (this.UinsureDBOriginalCompanyName != null &&
                    this.UinsureDBOriginalCompanyName.Equals(input.UinsureDBOriginalCompanyName))
                ) && 
                (
                    this.UinsureDBOriginalDistributionGroupName == input.UinsureDBOriginalDistributionGroupName ||
                    (this.UinsureDBOriginalDistributionGroupName != null &&
                    this.UinsureDBOriginalDistributionGroupName.Equals(input.UinsureDBOriginalDistributionGroupName))
                ) && 
                (
                    this.UinsureDBOriginalNetworkName == input.UinsureDBOriginalNetworkName ||
                    (this.UinsureDBOriginalNetworkName != null &&
                    this.UinsureDBOriginalNetworkName.Equals(input.UinsureDBOriginalNetworkName))
                ) && 
                (
                    this.UinsureDBOriginalPolicyNumber == input.UinsureDBOriginalPolicyNumber ||
                    (this.UinsureDBOriginalPolicyNumber != null &&
                    this.UinsureDBOriginalPolicyNumber.Equals(input.UinsureDBOriginalPolicyNumber))
                ) && 
                (
                    this.UinsureDBSaleType == input.UinsureDBSaleType ||
                    (this.UinsureDBSaleType != null &&
                    this.UinsureDBSaleType.Equals(input.UinsureDBSaleType))
                ) && 
                (
                    this.UinsureDBSource == input.UinsureDBSource ||
                    (this.UinsureDBSource != null &&
                    this.UinsureDBSource.Equals(input.UinsureDBSource))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BrokerCommissionRate != null)
                {
                    hashCode = (hashCode * 59) + this.BrokerCommissionRate.GetHashCode();
                }
                if (this.NetworkCommissionRate != null)
                {
                    hashCode = (hashCode * 59) + this.NetworkCommissionRate.GetHashCode();
                }
                if (this.SaleTypeNew != null)
                {
                    hashCode = (hashCode * 59) + this.SaleTypeNew.GetHashCode();
                }
                if (this.UinsureCommissionRate != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureCommissionRate.GetHashCode();
                }
                if (this.UinsureDBApplicationSource != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBApplicationSource.GetHashCode();
                }
                if (this.UinsureDBBrokerFirstName != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBBrokerFirstName.GetHashCode();
                }
                if (this.UinsureDBBrokerLastName != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBBrokerLastName.GetHashCode();
                }
                if (this.UinsureDBBrokerFullName != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBBrokerFullName.GetHashCode();
                }
                if (this.UinsureDBCompanyName != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBCompanyName.GetHashCode();
                }
                if (this.UinsureDBDistributionGroupName != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBDistributionGroupName.GetHashCode();
                }
                if (this.UinsureDBDrillDownStatus != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBDrillDownStatus.GetHashCode();
                }
                if (this.UinsureDBNetworkName != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBNetworkName.GetHashCode();
                }
                if (this.UinsureDBOriginalBrokerFirstName != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBOriginalBrokerFirstName.GetHashCode();
                }
                if (this.UinsureDBOriginalBrokerLastName != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBOriginalBrokerLastName.GetHashCode();
                }
                if (this.UinsureDBOriginalBrokerFullName != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBOriginalBrokerFullName.GetHashCode();
                }
                if (this.UinsureDBOriginalCompanyName != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBOriginalCompanyName.GetHashCode();
                }
                if (this.UinsureDBOriginalDistributionGroupName != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBOriginalDistributionGroupName.GetHashCode();
                }
                if (this.UinsureDBOriginalNetworkName != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBOriginalNetworkName.GetHashCode();
                }
                if (this.UinsureDBOriginalPolicyNumber != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBOriginalPolicyNumber.GetHashCode();
                }
                if (this.UinsureDBSaleType != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBSaleType.GetHashCode();
                }
                if (this.UinsureDBSource != null)
                {
                    hashCode = (hashCode * 59) + this.UinsureDBSource.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
